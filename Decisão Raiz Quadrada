/*
    Programa       : decisaoRaizes.c
    Versão         : 
    Descrição      : Usuário pode inserir número para calculo da raiz quadrada pela linha de comando, caso não insira, o código retorna a raiz quadrada do RA.
    Desenvolvedora : Brenda Silveira Pereira
    Criado em      : 06/12/2022
    Atualizado em  : 06/12/2022
    Comentários    : Utiliza parâmetros de decisão switch e while.
*/

#include <stdio.h>
#include <stdlib.h>

float squareRoot(float number);
float squareRootRA(float number);

void sim()
{
    float number;

    printf("Insira um n%cmero real n%co negativo: ", 163, 198);
    scanf("%f", &number);
    printf("\nRaiz de %f = %.12f\n", number, squareRoot(number));
    printf("\n............................................\n");
}

void nao()
{
    int N = 210017733; //Positive integer given (to be read)
    int sum; //Sum of the digits of N
    int digit; //Store each digit of N

    printf("\nRA = 210017733\n");  
    printf("\nN = 2 + 1 + 0 + 0 + 1 + 7 + 7 + 3 + 3\n");
    sum = 0; //Sum initialization
 
    while (N > 0){
        digit =  N % 10; //The rightmost digit of N is obtained
        sum = sum + digit;
        N = N / 10; //N becomes the previous N without the rightmost digit
    }
  
    printf("\nN = %d\n\n", sum);

    int number = sum;

    printf("Raiz aproximada de %d = %.10f\n", sum, squareRootRA(number));
    printf("\n............................................\n");
}

void sair()
{
    printf("J%c vai?\nEspere!\nN%c%c...\n", 160, 198, 198);
}


int main()
{
    int run = 1;

    do
    {
        printf("\nRaiz Quadrada\n");
        printf("\nDeseja inserir e calcular um n%cmero real n%co negativo?\n", 163, 198);
        printf("1. Sim\n");
        printf("2. N%co\n", 198);
        printf("0. Sair\n");

        scanf("%d", &run);
        system("cls || clear");

        switch(run)
        {
            case 1:
                sim();
                break;

            case 2:
                nao();
                break;

            case 0:
                sair();
                break;

            default:
                printf("Digite uma opcao valida\n");
        }
    } while(run);
}

float squareRoot(float number)
{	
    float r = 1; //Smallest approximate exact root of n
	
	while( number > (r * r) ) r += 1E+0; //Calculates the approximate integer root
	while( number < (r * r) ) r -= 1E-6; //Calculates the root of the approximate fraction
	
	return r; //Returns root of n

}

float squareRootRA(float number)
{	
    float r = 1; //Smallest approximate exact root of n
	
	while(number > (r * r) ) r += 1E+0; //Calculates the approximate integer root
	while(number < (r * r) ) r -= 1E-6; //Calculates the root of the approximate fraction
	
    return r; //Returns root of n
	
}
