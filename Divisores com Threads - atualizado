//Programa que multiplica por 10.000 o RA inserido e imprime os divisores do c√°lculo em ordem crescente utilizando 2 Threads.

#include <stdio.h>
#include <pthread.h>

void * print1(void* p);
void * print2(void* p);

long long int const val = 2100177 * 10LL;

typedef struct{

    long long int valor;
    long long int *array;

} Estrutura;

int main(){

    pthread_t t0, t1;

    long long int val1 = val / 2;

    long long int arr1[70] = {0};
    long long int arr2[70] = {0};

    Estrutura obj1 = {
        val1, arr1
    };

    Estrutura obj2 = {
        val, arr2
    };


    pthread_create(&t0, NULL, print1, (void *) &obj1);
    pthread_create(&t1, NULL, print2, (void *) &obj2);
    pthread_join(t0, NULL);
    pthread_join(t1, NULL);

    for(int i = 0; i < 10000; i++){
        if(obj1.array[i] == 0){
            break;
        }
        printf("%lld ", obj1.array[i]);
    }

    for(int i = 0; i < 100; i++){
        if(obj2.array[i] == 0){
            break;
        }
        printf("%lld ", obj2.array[i]);
    }

    return 0;
}

void * print1(void* p){

    Estrutura *a = (Estrutura *) p;

    int x = 0;

    for(long long int i = 1; i <= a->valor; i++){
        if(val % i == 0){
            a->array[x] = i;
            x++;
        }
    }

    return NULL;
}

void * print2(void* p){

    Estrutura *b = (Estrutura *) p;
   
    int x = 0;

    long long int val1 = val / 2;

    for(long long int i = ((1 * val1) + 1); i <= b->valor; i++){
        if(val % i == 0){
            b->array[x] = i;
            x++;
        }
    }

    return NULL;
}
